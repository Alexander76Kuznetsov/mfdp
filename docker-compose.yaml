version: '3'

services:
  app:
    build: ./app/
    image: my-ml-service:latest
    env_file:
      - ./app/.env
    volumes:
      - ./app:/app
    depends_on:
      - db
    networks:
      - app-network

  web-proxy:
    image: nginx:latest
    depends_on:
      - app
      - db
      - rabbitmq
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.13.1-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
      # - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
    networks:
      - app-network

  ml-worker:
    build:
      context: ./app
      dockerfile: Dockerfile.worker
    env_file:
      - ./app/.env
    # volumes:
    #   - ./app:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    deploy:
      replicas: 3


  db:
    image: postgres:13
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sa
    expose:
      - 5432
    networks:
      - app-network

volumes:
  postgres_volume:

networks:
  app-network:
    driver: bridge
